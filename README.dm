Описание
Проект реализует таблицу, где каждая ячейка (включая шапку) может переключаться в режим редактирования по клику. После изменения любой ячейки запускается механизм автосохранения:

5 секунд паузы после последнего ввода

10-секундный отсчёт с прогресс-баром (10→0)

При достижении нуля — данные сохраняются в localStorage и отредактированные ячейки выводятся в консоль вместе с их id

Если ввод продолжается в течение паузы или отсчёта, все таймеры сбрасываются и процесс запускается заново. Если новое значение совпадает с исходным — автосохранение не запускается.

Функционал
Режим редактирования в каждой ячейке

Валидация ввода по типу поля:

ФИО: только кириллица, точки и пробелы

Проценты: только цифры, знак % всегда в конце

Число: только цифры

Комбинированное поле: без валидации

Автосохранение через 5 сек паузы + 10 сек обратного отсчёта

Прогресс-бар и цифровой таймер

Повторный вход в редактирование обрывает текущий прогресс и скрывает бар

Данные хранятся в localStorage

Кнопка Сохранить изменения становится активной, когда есть правки

Технологии
React 17+

JavaScript (ES6+)

CSS-in-JS (inline-стили для простоты)

Установка и запуск
bash
# Клонировать репозиторий
git clone https://github.com/ваш-пользователь/editable-table.git
cd editable-table

# Установить зависимости
npm install
# или
yarn

# Запустить в режиме разработки
npm start
# или
yarn start
Откроется http://localhost:3000 с интерактивной таблицей.

Для сборки продакшен-версии:

bash
npm run build
# или
yarn build
Результат будет в папке build/.

Структура проекта
editable-table/
├── public/
│   └── index.html
├── src/
│   ├── components/
│   │   └── EditableCell.js   # Компонент редактируемой ячейки
│   ├── App.js                # Основной компонент и логика таймеров
│   ├── index.js              # Точка входа
│   └── styles.css            # (Опционально) глобальные стили
├── .gitignore
├── package.json
└── README.md
Как это работает
Пользователь кликает на ячейку → <div> меняется на <input> и получает фокус.

При каждом вводе символа:

Значение валидируется в зависимости от типа поля.

Вызывается onChange, обновляется состояние в App.js.

Сбрасываются все текущие таймеры и запускается 5-секундная пауза.

Если в течение 5 сек новый ввод не происходит → запускается 10-секундный setInterval для прогресс-бара.

При достижении 0:

Сохраняем данные в localStorage.

Выводим в консоль массив отредактированных ячеек с их id.

Сбрасываем все таймеры и прогресс-бар.

Если пользователь вновь кликает или вводит во время паузы/отчёта → прогресс-бар исчезает, таймеры сбрасываются, а после нового простоя процесс повторяется.